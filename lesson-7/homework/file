Find the minimum price of a product in the Products table
select minN(Price) as MinPrice FROM Products;
Find the maximum salary from the Employees table
select max(Salary) as MaxSalary from Employees
⃣ Count the number of rows in the Customers table
SELECT COUNT(*) AS TotalCustomers
FROM Customers;
️⃣ Count the number of unique product categories from the Products table
SELECT COUNT(DISTINCT Category) AS UniqueCategories
FROM Products;
⃣ Find the total sales amount for the product with ID = 7 in the Sales table


SELECT SUM(TotalAmount) AS TotalSalesForProduct7
FROM Sales
WHERE ProductID = 7;


⃣ Calculate the average age of employees in the Employees table


SELECT AVG(DATEDIFF(YEAR, BirthDate, GETDATE())) AS AverageAge
FROM Employees;
️⃣ Count the number of employees in each department
SELECT DepartmentID, COUNT(*) AS EmployeeCount
FROM Employees
GROUP BY DepartmentID;
Show the minimum and maximum price of products grouped by category
SELECT Category,
       MIN(Price) AS MinPrice,
       MAX(Price) AS MaxPrice
FROM Products
GROUP BY Category;

 Calculate the total sales per customer in the Sales table

SELECT CustomerID,
       SUM(TotalAmount) AS TotalSales
FROM Sales
GROUP BY CustomerID;



 Filter departments having more than 5 employees (using DeptID)
SELECT DepartmentID, COUNT(*) AS EmployeeCount
FROM Employees
GROUP BY DepartmentID
HAVING COUNT(*) > 5;


SELECT 
    p.Category,
    SUM(s.SaleAmount) AS TotalSales,
    AVG(s.SaleAmount) AS AvgSales
FROM Sales s
JOIN Products p ON s.ProductID = p.ProductID
GROUP BY p.Category;

SELECT COUNT(*) AS HR_EmployeeCount
FROM Employees
WHERE DepartmentName = 'HR';


SELECT 
    DepartmentName,
    MAX(Salary) AS HighestSalary,
    MIN(Salary) AS LowestSalary
FROM Employees
GROUP BY DepartmentName;


SELECT 
    DepartmentName,
    MAX(Salary) AS HighestSalary,
    MIN(Salary) AS LowestSalary
FROM Employees
GROUP BY DepartmentName;


SELECT 
    DepartmentName,
    AVG(Salary) AS AvgSalary
FROM Employees
GROUP BY DepartmentName;
SELECT 
    DepartmentName,
    AVG(Salary) AS AvgSalary,
    COUNT(*) AS EmployeeCount
FROM Employees
GROUP BY DepartmentName;

SELECT 
    Category,
    AVG(Price) AS AvgPrice
FROM Products
GROUP BY Category
HAVING AVG(Price) > 400;
SELECT 
    YEAR(SaleDate) AS SalesYear,
    SUM(SaleAmount) AS TotalSales
FROM Sales
GROUP BY YEAR(SaleDate)
ORDER BY SalesYear;
SELECT 
    CustomerID,
    COUNT(OrderID) AS OrderCount
FROM Orders
GROUP BY CustomerID
HAVING COUNT(OrderID) >= 3;

SELECT 
    DepartmentName,
    AVG(Salary) AS AvgSalary
FROM Employees
GROUP BY DepartmentName
HAVING AVG(Salary) > 60000;
SELECT 
    Category,
    AVG(Price) AS AvgPrice
FROM Products
GROUP BY Category
HAVING AVG(Price) > 150;
SELECT 
    CustomerID,
    SUM(SaleAmount) AS TotalSales
FROM Sales
GROUP BY CustomerID
HAVING SUM(SaleAmount) > 1500;
SELECT 
    DepartmentName,
    SUM(Salary) AS TotalSalary,
    AVG(Salary) AS AvgSalary
FROM Employees
GROUP BY DepartmentName
HAVING AVG(Salary) > 65000;

SELECT 
    CustomerID,
    SUM(TotalDue) AS TotalHighFreightOrders,
    MIN(TotalDue) AS LeastPurchase
FROM TSQL2012.Sales.Orders
WHERE Freight > 50
GROUP BY CustomerID;
SELECT 
    YEAR(OrderDate) AS SalesYear,
    MONTH(OrderDate) AS SalesMonth,
    SUM(TotalAmount) AS TotalSales,
    COUNT(DISTINCT ProductID) AS UniqueProducts
FROM Orders
GROUP BY YEAR(OrderDate), MONTH(OrderDate)
HAVING COUNT(DISTINCT ProductID) >= 2
ORDER BY SalesYear, SalesMonth;
SELECT 
    YEAR(OrderDate) AS OrderYear,
    MIN(Quantity) AS MinQuantity,
    MAX(Quantity) AS MaxQuantity
FROM Orders
GROUP BY YEAR(OrderDate)
ORDER BY OrderYear;
















